services:
  postgres_server:
    container_name: dj_postgress_preproduction
    image: "postgres:17.5-alpine3.21"
    restart: no
    volumes: 
       - ./data/dj_data:/var/lib/postgresql/data/dj_data
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_USER: dj_practice
      POSTGRES_DB: dj_practice_preproduction
      PGDATA: dj_data
    secrets:
      - postgres_password
    networks:
      - dj_practice_preproduction_network
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U dj_practice -d dj_practice_preproduction'"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    
  dj_practice_preproduction:
    container_name: dj_practice_preproduction
    image: "dj_practice:latest"
    restart: no
    volumes:
      - ./www/dj_practice/:/var/www/dj_practice/
    environment:
      SECRET_KEY: /run/secrets/secret_key
      DATABASE_PASSWORD: /run/secrets/postgres_password
      DJANGO_SETTINGS_FILE: dj_practice.settings_preproduction
    secrets:
      - secret_key
      - postgres_password
    depends_on:
      postgres_server:
        condition: service_healthy
    networks:
      - hostedapps
      - dj_practice_preproduction_network

secrets:
  postgres_password:
    file: secrets/postgres_password.txt
  secret_key:
    file: secrets/secret_key.txt  
    
networks:
  hostedapps:
    name: "hostedapps"
    external: true

  dj_practice_preproduction_network:
    name: "dj_practice_preproduction_network"
